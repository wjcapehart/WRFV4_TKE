# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/basic/vx_config/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/met
pkgincludedir = $(includedir)/met
pkglibdir = $(libdir)/met
pkglibexecdir = $(libexecdir)/met
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin18.0.0
host_triplet = x86_64-apple-darwin18.0.0
subdir = src/basic/vx_config
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	config.tab.cc config_scanner.cc $(top_srcdir)/depcomp \
	$(top_srcdir)/ylwrap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libvx_config_a_AR = $(AR) $(ARFLAGS)
libvx_config_a_LIBADD =
am__libvx_config_a_SOURCES_DIST = config.tab.cc config.tab.h \
	config_scanner.cc configobjecttype_to_string.cc \
	configobjecttype_to_string.h grdfiletype_to_string.cc \
	grdfiletype_to_string.h celltype_to_string.cc \
	celltype_to_string.h dictionary.cc dictionary.h config_file.cc \
	config_file.h config_util.cc config_util.h temp_file.cc \
	temp_file.h threshold.cc threshold.h idstack.cc idstack.h \
	number_stack.cc number_stack.h builtin.cc builtin.h icode.cc \
	icode.h calculator.cc calculator.h config_funcs.cc \
	config_funcs.h data_file_type.h object_types.h scanner_stuff.h \
	config_constants.h vx_config.h  
am_libvx_config_a_OBJECTS =  \
	libvx_config_a-config.tab.$(OBJEXT) \
	libvx_config_a-config_scanner.$(OBJEXT) \
	libvx_config_a-configobjecttype_to_string.$(OBJEXT) \
	libvx_config_a-grdfiletype_to_string.$(OBJEXT) \
	libvx_config_a-celltype_to_string.$(OBJEXT) \
	libvx_config_a-dictionary.$(OBJEXT) \
	libvx_config_a-config_file.$(OBJEXT) \
	libvx_config_a-config_util.$(OBJEXT) \
	libvx_config_a-temp_file.$(OBJEXT) \
	libvx_config_a-threshold.$(OBJEXT) \
	libvx_config_a-idstack.$(OBJEXT) \
	libvx_config_a-number_stack.$(OBJEXT) \
	libvx_config_a-builtin.$(OBJEXT) \
	libvx_config_a-icode.$(OBJEXT) \
	libvx_config_a-calculator.$(OBJEXT) \
	libvx_config_a-config_funcs.$(OBJEXT)
#am_libvx_config_a_OBJECTS =  \
#	libvx_config_a-config.tab.$(OBJEXT) \
#	libvx_config_a-config_scanner.$(OBJEXT) \
#	libvx_config_a-configobjecttype_to_string.$(OBJEXT) \
#	libvx_config_a-grdfiletype_to_string.$(OBJEXT) \
#	libvx_config_a-celltype_to_string.$(OBJEXT) \
#	libvx_config_a-dictionary.$(OBJEXT) \
#	libvx_config_a-config_file.$(OBJEXT) \
#	libvx_config_a-config_util.$(OBJEXT) \
#	libvx_config_a-temp_file.$(OBJEXT) \
#	libvx_config_a-threshold.$(OBJEXT) \
#	libvx_config_a-idstack.$(OBJEXT) \
#	libvx_config_a-number_stack.$(OBJEXT) \
#	libvx_config_a-builtin.$(OBJEXT) \
#	libvx_config_a-icode.$(OBJEXT) \
#	libvx_config_a-calculator.$(OBJEXT) \
#	libvx_config_a-config_funcs.$(OBJEXT)
libvx_config_a_OBJECTS = $(am_libvx_config_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libvx_config_a_SOURCES)
DIST_SOURCES = $(am__libvx_config_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/missing autoconf
AUTOHEADER = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/missing autoheader
AUTOMAKE = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/missing automake-1.14
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -DBLOCK4 -DMET_BASE="\"$(pkgdatadir)\""
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = gfortran
FC_LIBS = -lgfortran
FFLAGS = -g -O2
FLIBS =  -L/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/gcc/x86_64-apple-darwin17.7.0/8.2.0 -L/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/gcc/x86_64-apple-darwin17.7.0/8.2.0/../../.. -lgfortran -lquadmath -lm
GREP = /usr/bin/grep
GRIB2_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = 
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/missing makeinfo
MET_BUFR = 
MET_BUFRLIB = 
MET_CAIRO = 
MET_CAIROINC = 
MET_CAIROLIB = 
MET_FREETYPE = 
MET_FREETYPEINC = 
MET_FREETYPELIB = 
MET_GRIB2C = 
MET_GRIB2CINC = 
MET_GRIB2CLIB = 
MET_GSL = 
MET_GSLINC = 
MET_GSLLIB = 
MET_HDF = 
MET_HDF5 = 
MET_HDF5INC = 
MET_HDF5LIB = 
MET_HDFEOS = 
MET_HDFEOSINC = 
MET_HDFEOSLIB = 
MET_HDFINC = 
MET_HDFLIB = 
MET_NETCDF = 
MET_NETCDFINC = 
MET_NETCDFLIB = 
MET_PYTHON_CC = 
MET_PYTHON_LD = 
MKDIR_P = ../../.././install-sh -c -d
OBJEXT = o
PACKAGE = met
PACKAGE_BUGREPORT = met_help@ucar.edu
PACKAGE_NAME = MET
PACKAGE_STRING = MET 8.0
PACKAGE_TARNAME = met
PACKAGE_URL = http://www.dtcenter.org/met/users
PACKAGE_VERSION = 8.0
PATH_SEPARATOR = :
PYTHON_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 8.0
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/wjc/GitHub/WRFV4.0.0/met-8.0/src/basic/vx_config
abs_srcdir = /Users/wjc/GitHub/WRFV4.0.0/met-8.0/src/basic/vx_config
abs_top_builddir = /Users/wjc/GitHub/WRFV4.0.0/met-8.0
abs_top_srcdir = /Users/wjc/GitHub/WRFV4.0.0/met-8.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin18.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin18.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin18.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin18.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/wjc/GitHub/WRFV4.0.0/met-8.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
MAINTAINERCLEANFILES = Makefile.in

# Yacc/lex flags
AM_YFLAGS = --defines=config.tab.h -p config
AM_LFLAGS = --prefix=config --outfile=lex.yy.c

# The library
noinst_LIBRARIES = libvx_config.a
libvx_config_a_SOURCES = config.tab.cc \
	config.tab.h config_scanner.cc \
	configobjecttype_to_string.cc \
	configobjecttype_to_string.h \
	grdfiletype_to_string.cc \
	grdfiletype_to_string.h \
	celltype_to_string.cc \
	celltype_to_string.h dictionary.cc \
	dictionary.h config_file.cc \
	config_file.h config_util.cc \
	config_util.h temp_file.cc \
	temp_file.h threshold.cc threshold.h \
	idstack.cc idstack.h number_stack.cc \
	number_stack.h builtin.cc builtin.h \
	icode.cc icode.h calculator.cc \
	calculator.h config_funcs.cc \
	config_funcs.h data_file_type.h \
	object_types.h scanner_stuff.h \
	config_constants.h vx_config.h
#libvx_config_a_SOURCES =  \
#	 \
#	configobjecttype_to_string.cc \
#	configobjecttype_to_string.h \
#	grdfiletype_to_string.cc \
#	grdfiletype_to_string.h \
#	celltype_to_string.cc \
#	celltype_to_string.h dictionary.cc \
#	dictionary.h config_file.cc \
#	config_file.h config_util.cc \
#	config_util.h temp_file.cc \
#	temp_file.h threshold.cc threshold.h \
#	idstack.cc idstack.h number_stack.cc \
#	number_stack.h builtin.cc builtin.h \
#	icode.cc icode.h calculator.cc \
#	calculator.h config_funcs.cc \
#	config_funcs.h data_file_type.h \
#	object_types.h scanner_stuff.h \
#	config_constants.h vx_config.h
libvx_config_a_CPPFLAGS = ${MET_CPPFLAGS}

# If we are in development mode, clean up extra local files in a "make clean".
#CLEANFILES = config_scanner.cc \
#        	config.tab.cc \
#        	config.tab.h \
#        	lex.config.cc


# Extra distribution files
EXTRA_DIST = config.tab.cc \
	config.tab.h \
	config_scanner.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .ll .o .obj .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/basic/vx_config/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/basic/vx_config/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libvx_config.a: $(libvx_config_a_OBJECTS) $(libvx_config_a_DEPENDENCIES) $(EXTRA_libvx_config_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvx_config.a
	$(AM_V_AR)$(libvx_config_a_AR) libvx_config.a $(libvx_config_a_OBJECTS) $(libvx_config_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvx_config.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libvx_config_a-builtin.Po
include ./$(DEPDIR)/libvx_config_a-calculator.Po
include ./$(DEPDIR)/libvx_config_a-celltype_to_string.Po
include ./$(DEPDIR)/libvx_config_a-config.tab.Po
include ./$(DEPDIR)/libvx_config_a-config_file.Po
include ./$(DEPDIR)/libvx_config_a-config_funcs.Po
include ./$(DEPDIR)/libvx_config_a-config_scanner.Po
include ./$(DEPDIR)/libvx_config_a-config_util.Po
include ./$(DEPDIR)/libvx_config_a-configobjecttype_to_string.Po
include ./$(DEPDIR)/libvx_config_a-dictionary.Po
include ./$(DEPDIR)/libvx_config_a-grdfiletype_to_string.Po
include ./$(DEPDIR)/libvx_config_a-icode.Po
include ./$(DEPDIR)/libvx_config_a-idstack.Po
include ./$(DEPDIR)/libvx_config_a-number_stack.Po
include ./$(DEPDIR)/libvx_config_a-temp_file.Po
include ./$(DEPDIR)/libvx_config_a-threshold.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libvx_config_a-config.tab.o: config.tab.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config.tab.o -MD -MP -MF $(DEPDIR)/libvx_config_a-config.tab.Tpo -c -o libvx_config_a-config.tab.o `test -f 'config.tab.cc' || echo '$(srcdir)/'`config.tab.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config.tab.Tpo $(DEPDIR)/libvx_config_a-config.tab.Po
#	$(AM_V_CXX)source='config.tab.cc' object='libvx_config_a-config.tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config.tab.o `test -f 'config.tab.cc' || echo '$(srcdir)/'`config.tab.cc

libvx_config_a-config.tab.obj: config.tab.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config.tab.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-config.tab.Tpo -c -o libvx_config_a-config.tab.obj `if test -f 'config.tab.cc'; then $(CYGPATH_W) 'config.tab.cc'; else $(CYGPATH_W) '$(srcdir)/config.tab.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config.tab.Tpo $(DEPDIR)/libvx_config_a-config.tab.Po
#	$(AM_V_CXX)source='config.tab.cc' object='libvx_config_a-config.tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config.tab.obj `if test -f 'config.tab.cc'; then $(CYGPATH_W) 'config.tab.cc'; else $(CYGPATH_W) '$(srcdir)/config.tab.cc'; fi`

libvx_config_a-config_scanner.o: config_scanner.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_scanner.o -MD -MP -MF $(DEPDIR)/libvx_config_a-config_scanner.Tpo -c -o libvx_config_a-config_scanner.o `test -f 'config_scanner.cc' || echo '$(srcdir)/'`config_scanner.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_scanner.Tpo $(DEPDIR)/libvx_config_a-config_scanner.Po
#	$(AM_V_CXX)source='config_scanner.cc' object='libvx_config_a-config_scanner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_scanner.o `test -f 'config_scanner.cc' || echo '$(srcdir)/'`config_scanner.cc

libvx_config_a-config_scanner.obj: config_scanner.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_scanner.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-config_scanner.Tpo -c -o libvx_config_a-config_scanner.obj `if test -f 'config_scanner.cc'; then $(CYGPATH_W) 'config_scanner.cc'; else $(CYGPATH_W) '$(srcdir)/config_scanner.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_scanner.Tpo $(DEPDIR)/libvx_config_a-config_scanner.Po
#	$(AM_V_CXX)source='config_scanner.cc' object='libvx_config_a-config_scanner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_scanner.obj `if test -f 'config_scanner.cc'; then $(CYGPATH_W) 'config_scanner.cc'; else $(CYGPATH_W) '$(srcdir)/config_scanner.cc'; fi`

libvx_config_a-configobjecttype_to_string.o: configobjecttype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-configobjecttype_to_string.o -MD -MP -MF $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Tpo -c -o libvx_config_a-configobjecttype_to_string.o `test -f 'configobjecttype_to_string.cc' || echo '$(srcdir)/'`configobjecttype_to_string.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Tpo $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Po
#	$(AM_V_CXX)source='configobjecttype_to_string.cc' object='libvx_config_a-configobjecttype_to_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-configobjecttype_to_string.o `test -f 'configobjecttype_to_string.cc' || echo '$(srcdir)/'`configobjecttype_to_string.cc

libvx_config_a-configobjecttype_to_string.obj: configobjecttype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-configobjecttype_to_string.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Tpo -c -o libvx_config_a-configobjecttype_to_string.obj `if test -f 'configobjecttype_to_string.cc'; then $(CYGPATH_W) 'configobjecttype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/configobjecttype_to_string.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Tpo $(DEPDIR)/libvx_config_a-configobjecttype_to_string.Po
#	$(AM_V_CXX)source='configobjecttype_to_string.cc' object='libvx_config_a-configobjecttype_to_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-configobjecttype_to_string.obj `if test -f 'configobjecttype_to_string.cc'; then $(CYGPATH_W) 'configobjecttype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/configobjecttype_to_string.cc'; fi`

libvx_config_a-grdfiletype_to_string.o: grdfiletype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-grdfiletype_to_string.o -MD -MP -MF $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Tpo -c -o libvx_config_a-grdfiletype_to_string.o `test -f 'grdfiletype_to_string.cc' || echo '$(srcdir)/'`grdfiletype_to_string.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Tpo $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Po
#	$(AM_V_CXX)source='grdfiletype_to_string.cc' object='libvx_config_a-grdfiletype_to_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-grdfiletype_to_string.o `test -f 'grdfiletype_to_string.cc' || echo '$(srcdir)/'`grdfiletype_to_string.cc

libvx_config_a-grdfiletype_to_string.obj: grdfiletype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-grdfiletype_to_string.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Tpo -c -o libvx_config_a-grdfiletype_to_string.obj `if test -f 'grdfiletype_to_string.cc'; then $(CYGPATH_W) 'grdfiletype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/grdfiletype_to_string.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Tpo $(DEPDIR)/libvx_config_a-grdfiletype_to_string.Po
#	$(AM_V_CXX)source='grdfiletype_to_string.cc' object='libvx_config_a-grdfiletype_to_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-grdfiletype_to_string.obj `if test -f 'grdfiletype_to_string.cc'; then $(CYGPATH_W) 'grdfiletype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/grdfiletype_to_string.cc'; fi`

libvx_config_a-celltype_to_string.o: celltype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-celltype_to_string.o -MD -MP -MF $(DEPDIR)/libvx_config_a-celltype_to_string.Tpo -c -o libvx_config_a-celltype_to_string.o `test -f 'celltype_to_string.cc' || echo '$(srcdir)/'`celltype_to_string.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-celltype_to_string.Tpo $(DEPDIR)/libvx_config_a-celltype_to_string.Po
#	$(AM_V_CXX)source='celltype_to_string.cc' object='libvx_config_a-celltype_to_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-celltype_to_string.o `test -f 'celltype_to_string.cc' || echo '$(srcdir)/'`celltype_to_string.cc

libvx_config_a-celltype_to_string.obj: celltype_to_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-celltype_to_string.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-celltype_to_string.Tpo -c -o libvx_config_a-celltype_to_string.obj `if test -f 'celltype_to_string.cc'; then $(CYGPATH_W) 'celltype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/celltype_to_string.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-celltype_to_string.Tpo $(DEPDIR)/libvx_config_a-celltype_to_string.Po
#	$(AM_V_CXX)source='celltype_to_string.cc' object='libvx_config_a-celltype_to_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-celltype_to_string.obj `if test -f 'celltype_to_string.cc'; then $(CYGPATH_W) 'celltype_to_string.cc'; else $(CYGPATH_W) '$(srcdir)/celltype_to_string.cc'; fi`

libvx_config_a-dictionary.o: dictionary.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-dictionary.o -MD -MP -MF $(DEPDIR)/libvx_config_a-dictionary.Tpo -c -o libvx_config_a-dictionary.o `test -f 'dictionary.cc' || echo '$(srcdir)/'`dictionary.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-dictionary.Tpo $(DEPDIR)/libvx_config_a-dictionary.Po
#	$(AM_V_CXX)source='dictionary.cc' object='libvx_config_a-dictionary.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-dictionary.o `test -f 'dictionary.cc' || echo '$(srcdir)/'`dictionary.cc

libvx_config_a-dictionary.obj: dictionary.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-dictionary.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-dictionary.Tpo -c -o libvx_config_a-dictionary.obj `if test -f 'dictionary.cc'; then $(CYGPATH_W) 'dictionary.cc'; else $(CYGPATH_W) '$(srcdir)/dictionary.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-dictionary.Tpo $(DEPDIR)/libvx_config_a-dictionary.Po
#	$(AM_V_CXX)source='dictionary.cc' object='libvx_config_a-dictionary.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-dictionary.obj `if test -f 'dictionary.cc'; then $(CYGPATH_W) 'dictionary.cc'; else $(CYGPATH_W) '$(srcdir)/dictionary.cc'; fi`

libvx_config_a-config_file.o: config_file.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_file.o -MD -MP -MF $(DEPDIR)/libvx_config_a-config_file.Tpo -c -o libvx_config_a-config_file.o `test -f 'config_file.cc' || echo '$(srcdir)/'`config_file.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_file.Tpo $(DEPDIR)/libvx_config_a-config_file.Po
#	$(AM_V_CXX)source='config_file.cc' object='libvx_config_a-config_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_file.o `test -f 'config_file.cc' || echo '$(srcdir)/'`config_file.cc

libvx_config_a-config_file.obj: config_file.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_file.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-config_file.Tpo -c -o libvx_config_a-config_file.obj `if test -f 'config_file.cc'; then $(CYGPATH_W) 'config_file.cc'; else $(CYGPATH_W) '$(srcdir)/config_file.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_file.Tpo $(DEPDIR)/libvx_config_a-config_file.Po
#	$(AM_V_CXX)source='config_file.cc' object='libvx_config_a-config_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_file.obj `if test -f 'config_file.cc'; then $(CYGPATH_W) 'config_file.cc'; else $(CYGPATH_W) '$(srcdir)/config_file.cc'; fi`

libvx_config_a-config_util.o: config_util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_util.o -MD -MP -MF $(DEPDIR)/libvx_config_a-config_util.Tpo -c -o libvx_config_a-config_util.o `test -f 'config_util.cc' || echo '$(srcdir)/'`config_util.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_util.Tpo $(DEPDIR)/libvx_config_a-config_util.Po
#	$(AM_V_CXX)source='config_util.cc' object='libvx_config_a-config_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_util.o `test -f 'config_util.cc' || echo '$(srcdir)/'`config_util.cc

libvx_config_a-config_util.obj: config_util.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_util.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-config_util.Tpo -c -o libvx_config_a-config_util.obj `if test -f 'config_util.cc'; then $(CYGPATH_W) 'config_util.cc'; else $(CYGPATH_W) '$(srcdir)/config_util.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_util.Tpo $(DEPDIR)/libvx_config_a-config_util.Po
#	$(AM_V_CXX)source='config_util.cc' object='libvx_config_a-config_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_util.obj `if test -f 'config_util.cc'; then $(CYGPATH_W) 'config_util.cc'; else $(CYGPATH_W) '$(srcdir)/config_util.cc'; fi`

libvx_config_a-temp_file.o: temp_file.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-temp_file.o -MD -MP -MF $(DEPDIR)/libvx_config_a-temp_file.Tpo -c -o libvx_config_a-temp_file.o `test -f 'temp_file.cc' || echo '$(srcdir)/'`temp_file.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-temp_file.Tpo $(DEPDIR)/libvx_config_a-temp_file.Po
#	$(AM_V_CXX)source='temp_file.cc' object='libvx_config_a-temp_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-temp_file.o `test -f 'temp_file.cc' || echo '$(srcdir)/'`temp_file.cc

libvx_config_a-temp_file.obj: temp_file.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-temp_file.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-temp_file.Tpo -c -o libvx_config_a-temp_file.obj `if test -f 'temp_file.cc'; then $(CYGPATH_W) 'temp_file.cc'; else $(CYGPATH_W) '$(srcdir)/temp_file.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-temp_file.Tpo $(DEPDIR)/libvx_config_a-temp_file.Po
#	$(AM_V_CXX)source='temp_file.cc' object='libvx_config_a-temp_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-temp_file.obj `if test -f 'temp_file.cc'; then $(CYGPATH_W) 'temp_file.cc'; else $(CYGPATH_W) '$(srcdir)/temp_file.cc'; fi`

libvx_config_a-threshold.o: threshold.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-threshold.o -MD -MP -MF $(DEPDIR)/libvx_config_a-threshold.Tpo -c -o libvx_config_a-threshold.o `test -f 'threshold.cc' || echo '$(srcdir)/'`threshold.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-threshold.Tpo $(DEPDIR)/libvx_config_a-threshold.Po
#	$(AM_V_CXX)source='threshold.cc' object='libvx_config_a-threshold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-threshold.o `test -f 'threshold.cc' || echo '$(srcdir)/'`threshold.cc

libvx_config_a-threshold.obj: threshold.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-threshold.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-threshold.Tpo -c -o libvx_config_a-threshold.obj `if test -f 'threshold.cc'; then $(CYGPATH_W) 'threshold.cc'; else $(CYGPATH_W) '$(srcdir)/threshold.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-threshold.Tpo $(DEPDIR)/libvx_config_a-threshold.Po
#	$(AM_V_CXX)source='threshold.cc' object='libvx_config_a-threshold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-threshold.obj `if test -f 'threshold.cc'; then $(CYGPATH_W) 'threshold.cc'; else $(CYGPATH_W) '$(srcdir)/threshold.cc'; fi`

libvx_config_a-idstack.o: idstack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-idstack.o -MD -MP -MF $(DEPDIR)/libvx_config_a-idstack.Tpo -c -o libvx_config_a-idstack.o `test -f 'idstack.cc' || echo '$(srcdir)/'`idstack.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-idstack.Tpo $(DEPDIR)/libvx_config_a-idstack.Po
#	$(AM_V_CXX)source='idstack.cc' object='libvx_config_a-idstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-idstack.o `test -f 'idstack.cc' || echo '$(srcdir)/'`idstack.cc

libvx_config_a-idstack.obj: idstack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-idstack.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-idstack.Tpo -c -o libvx_config_a-idstack.obj `if test -f 'idstack.cc'; then $(CYGPATH_W) 'idstack.cc'; else $(CYGPATH_W) '$(srcdir)/idstack.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-idstack.Tpo $(DEPDIR)/libvx_config_a-idstack.Po
#	$(AM_V_CXX)source='idstack.cc' object='libvx_config_a-idstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-idstack.obj `if test -f 'idstack.cc'; then $(CYGPATH_W) 'idstack.cc'; else $(CYGPATH_W) '$(srcdir)/idstack.cc'; fi`

libvx_config_a-number_stack.o: number_stack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-number_stack.o -MD -MP -MF $(DEPDIR)/libvx_config_a-number_stack.Tpo -c -o libvx_config_a-number_stack.o `test -f 'number_stack.cc' || echo '$(srcdir)/'`number_stack.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-number_stack.Tpo $(DEPDIR)/libvx_config_a-number_stack.Po
#	$(AM_V_CXX)source='number_stack.cc' object='libvx_config_a-number_stack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-number_stack.o `test -f 'number_stack.cc' || echo '$(srcdir)/'`number_stack.cc

libvx_config_a-number_stack.obj: number_stack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-number_stack.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-number_stack.Tpo -c -o libvx_config_a-number_stack.obj `if test -f 'number_stack.cc'; then $(CYGPATH_W) 'number_stack.cc'; else $(CYGPATH_W) '$(srcdir)/number_stack.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-number_stack.Tpo $(DEPDIR)/libvx_config_a-number_stack.Po
#	$(AM_V_CXX)source='number_stack.cc' object='libvx_config_a-number_stack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-number_stack.obj `if test -f 'number_stack.cc'; then $(CYGPATH_W) 'number_stack.cc'; else $(CYGPATH_W) '$(srcdir)/number_stack.cc'; fi`

libvx_config_a-builtin.o: builtin.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-builtin.o -MD -MP -MF $(DEPDIR)/libvx_config_a-builtin.Tpo -c -o libvx_config_a-builtin.o `test -f 'builtin.cc' || echo '$(srcdir)/'`builtin.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-builtin.Tpo $(DEPDIR)/libvx_config_a-builtin.Po
#	$(AM_V_CXX)source='builtin.cc' object='libvx_config_a-builtin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-builtin.o `test -f 'builtin.cc' || echo '$(srcdir)/'`builtin.cc

libvx_config_a-builtin.obj: builtin.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-builtin.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-builtin.Tpo -c -o libvx_config_a-builtin.obj `if test -f 'builtin.cc'; then $(CYGPATH_W) 'builtin.cc'; else $(CYGPATH_W) '$(srcdir)/builtin.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-builtin.Tpo $(DEPDIR)/libvx_config_a-builtin.Po
#	$(AM_V_CXX)source='builtin.cc' object='libvx_config_a-builtin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-builtin.obj `if test -f 'builtin.cc'; then $(CYGPATH_W) 'builtin.cc'; else $(CYGPATH_W) '$(srcdir)/builtin.cc'; fi`

libvx_config_a-icode.o: icode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-icode.o -MD -MP -MF $(DEPDIR)/libvx_config_a-icode.Tpo -c -o libvx_config_a-icode.o `test -f 'icode.cc' || echo '$(srcdir)/'`icode.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-icode.Tpo $(DEPDIR)/libvx_config_a-icode.Po
#	$(AM_V_CXX)source='icode.cc' object='libvx_config_a-icode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-icode.o `test -f 'icode.cc' || echo '$(srcdir)/'`icode.cc

libvx_config_a-icode.obj: icode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-icode.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-icode.Tpo -c -o libvx_config_a-icode.obj `if test -f 'icode.cc'; then $(CYGPATH_W) 'icode.cc'; else $(CYGPATH_W) '$(srcdir)/icode.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-icode.Tpo $(DEPDIR)/libvx_config_a-icode.Po
#	$(AM_V_CXX)source='icode.cc' object='libvx_config_a-icode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-icode.obj `if test -f 'icode.cc'; then $(CYGPATH_W) 'icode.cc'; else $(CYGPATH_W) '$(srcdir)/icode.cc'; fi`

libvx_config_a-calculator.o: calculator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-calculator.o -MD -MP -MF $(DEPDIR)/libvx_config_a-calculator.Tpo -c -o libvx_config_a-calculator.o `test -f 'calculator.cc' || echo '$(srcdir)/'`calculator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-calculator.Tpo $(DEPDIR)/libvx_config_a-calculator.Po
#	$(AM_V_CXX)source='calculator.cc' object='libvx_config_a-calculator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-calculator.o `test -f 'calculator.cc' || echo '$(srcdir)/'`calculator.cc

libvx_config_a-calculator.obj: calculator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-calculator.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-calculator.Tpo -c -o libvx_config_a-calculator.obj `if test -f 'calculator.cc'; then $(CYGPATH_W) 'calculator.cc'; else $(CYGPATH_W) '$(srcdir)/calculator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-calculator.Tpo $(DEPDIR)/libvx_config_a-calculator.Po
#	$(AM_V_CXX)source='calculator.cc' object='libvx_config_a-calculator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-calculator.obj `if test -f 'calculator.cc'; then $(CYGPATH_W) 'calculator.cc'; else $(CYGPATH_W) '$(srcdir)/calculator.cc'; fi`

libvx_config_a-config_funcs.o: config_funcs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_funcs.o -MD -MP -MF $(DEPDIR)/libvx_config_a-config_funcs.Tpo -c -o libvx_config_a-config_funcs.o `test -f 'config_funcs.cc' || echo '$(srcdir)/'`config_funcs.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_funcs.Tpo $(DEPDIR)/libvx_config_a-config_funcs.Po
#	$(AM_V_CXX)source='config_funcs.cc' object='libvx_config_a-config_funcs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_funcs.o `test -f 'config_funcs.cc' || echo '$(srcdir)/'`config_funcs.cc

libvx_config_a-config_funcs.obj: config_funcs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvx_config_a-config_funcs.obj -MD -MP -MF $(DEPDIR)/libvx_config_a-config_funcs.Tpo -c -o libvx_config_a-config_funcs.obj `if test -f 'config_funcs.cc'; then $(CYGPATH_W) 'config_funcs.cc'; else $(CYGPATH_W) '$(srcdir)/config_funcs.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvx_config_a-config_funcs.Tpo $(DEPDIR)/libvx_config_a-config_funcs.Po
#	$(AM_V_CXX)source='config_funcs.cc' object='libvx_config_a-config_funcs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvx_config_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvx_config_a-config_funcs.obj `if test -f 'config_funcs.cc'; then $(CYGPATH_W) 'config_funcs.cc'; else $(CYGPATH_W) '$(srcdir)/config_funcs.cc'; fi`

.ll.cc:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f config.tab.cc
	-rm -f config_scanner.cc
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am


# Include the project definitions

include ${top_srcdir}/Make-include

# If we are in development mode, generate the "to_string" files and
# clean them up in a "make clean".  We don't want to do either of these
# in a distribution because the enum_to_string utility isn't available.

#    configobjecttype_to_string.cc configobjecttype_to_string.h: object_types.h
#	${ENUM_TO_STRING} -concat_string object_types.h

#    grdfiletype_to_string.cc grdfiletype_to_string.h: data_file_type.h
#	${ENUM_TO_STRING} -concat_string -reverse data_file_type.h

#    celltype_to_string.cc celltype_to_string.h: icode.h
#	${ENUM_TO_STRING} -concat_string -reverse icode.h

#    clean-local:
#	-rm -r configobjecttype_to_string.cc
#	-rm -r configobjecttype_to_string.h
#	-rm -r grdfiletype_to_string.cc
#	-rm -r grdfiletype_to_string.h
#	-rm -r celltype_to_string.h
#	-rm -r celltype_to_string.cc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
